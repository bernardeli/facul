{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Pq orienta\'e7\'e3o a objectos n\'e3o \'e9 necess\'e1ria e nem suficiente para componentiza\'e7\'e3o ?\
\
O desenvolvimento baseado em componentes pode ser implementado em diversos paradigmas, seja procedural, orientado a objectos, ou outros. Tratando o componente como uma caixa preta, passa a ser importante a forma como ele se conecta com o mundo externo, trazendo os benef\'edcios para o sistema em geral, requerendo um grau de abstrac\'e7\'e3o maior do que a orienta\'e7\'e3o a objectos oferece. Levando dois pontos em considera\'e7\'e3o, demonstra que a orienta\'e7\'e3o a objectos n\'e3o \'e9 necess\'e1ria e nem suficiente para desenvolver um componente\
\
Atrav\'e9s dos requisitos e a necessidade do mercado ou cliente, \'e9 poss\'edvel descrever o inicio do desenvolvimento do componente com os casos de uso. Uma vez que os casos de uso foram escritos, \'e9 poss\'edvel definir o business process model, que descreve o fluxo das actividades do componente. Nesta mesma etapa de requirements, surge o business concept model, que traz uma primeira modelagem do sistema, sem existir liga\'e7\'f5es complexas, sendo algo mais simples para uma visualiza\'e7\'e3o geral. Ainda sobre requirements, os artefactos finais gerados sao o business process model e os use cases.\
\
Entrando na fase de specifications, \'e9 possivel definir o busines type model atraves do business concept model. O type model define o que \'e9 core e o que type. Core s\'e3o as classes que nao necessitam de informacoes de outras classes  do sistema. As business interfaces surgem a partir de cada tipo core do business type model do sistema, sendo as interfaces de negocio. As system interfaces surgem a partir dos casos de uso. Cada system interface, representa um caso de uso. Com essas interfaces, \'e9 possivel definir a primeira arquitetura do sistema, sendo representado em um diagrama que interliga as interfaces ao sistema.\
Ainda nesta mesma fase, partindo do business interfaces, \'e9 definido o business operations, que trata as opera\'e7\'f5es realizadas por cada business interface.\
\
Finalizando a fase de specifications, o interface information model visa demonstrar agrupando as dependencias entre as interfaces e classes do sistema.\
\
}